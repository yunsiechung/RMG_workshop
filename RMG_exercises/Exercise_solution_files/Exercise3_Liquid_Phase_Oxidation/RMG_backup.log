Global RMG Settings:
   database.directory   = /home/gridsan/yunsie/.conda/envs/rmg_env_bin/share/rmgdatabase (from /home/gridsan/yunsie/.conda/envs/rmg_env_bin/lib/python3.7/site-packages/rmgpy/rmgrc)
   test_data.directory  = /home/gridsan/yunsie/.conda/envs/rmg_env_bin/lib/python3.7/site-packages/rmgpy/test_data (Default, relative to RMG-Py source code)
RMG execution initiated at Tue Aug  9 00:07:49 2022

#########################################################
# RMG-Py - Reaction Mechanism Generator in Python       #
# Version: 3.1.0                                        #
# Authors: RMG Developers (rmg_dev@mit.edu)             #
# P.I.s:   William H. Green (whgreen@mit.edu)           #
#          Richard H. West (r.west@neu.edu)             #
# Website: http://reactionmechanismgenerator.github.io/ #
#########################################################

Reading input file "/home/gridsan/yunsie/research/RMG_workshop/liquid_phase_pentane/input.py"...
# Data sources
database(
    thermoLibraries = ['primaryThermoLibrary'],
    reactionLibraries = [],
    seedMechanisms = [],
    kineticsDepositories = ['training'],
    kineticsFamilies = 'default',
    kineticsEstimator = 'rate rules',
)

# Constraints on generated species
generatedSpeciesConstraints(
    maximumRadicalElectrons = 3,
)

# List of species
species(
    label='pentane',
    reactive=True,
    structure=SMILES("CCCCC"),
)

species(
    label='oxygen',
    reactive=True,
    structure=SMILES("[O][O]"),
)

# Reaction systems
liquidReactor(
    temperature=(500,'K'),
    initialConcentrations={
        "octane": (6.154e-3,'mol/cm^3'),
        "oxygen": (4.953e-6,'mol/cm^3')
    },
    terminationTime=(5,'s'),
)

solvation(
	solvent='pentane'
)

simulator(
    atol=1e-16,
    rtol=1e-8,
)

model(
    toleranceKeepInEdge=1E-9,
    toleranceMoveToCore=0.001,
    toleranceInterruptSimulation=0.1,
    maximumEdgeSpecies=100000
)

options(
    units='si',
    generateOutputHTML=False,
    generatePlots=False,
    saveSimulationProfiles=True,
)

